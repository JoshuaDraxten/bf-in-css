body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; }

h2 {
  font-size: 16px; }

[name="p"], [name="p_v"], input[name="l"], input[name^="cmd"] {
  position: absolute;
  left: 0;
  top: -20px; }

[name="p"] + * + *, .cmd {
  width: 24px;
  line-height: 24px;
  font-family: inherit;
  text-align: center;
  vertical-align: top;
  display: inline-block;
  margin: -1px -3px;
  border: solid 1px #f3f3f3; }

[name="p"]:checked + * + *, input[name="l"]:checked + * + * + * + * + * + * + .cmd {
  background: #88f; }

[name="p"] + * + * {
  cursor: pointer; }
  [name="p"] + * + *:before {
    content: '0'; }
  [name="p"] + * + *:hover {
    background: #cccccc; }

[name="p_v"]:checked + * + * + *:before {
  content: '1'; }

input[name^="cmd"]:checked + * + * + * + * + * + .cmd :nth-child(1), input[name^="cmd"]:checked + * + * + * + * + .cmd :nth-child(2), input[name^="cmd"]:checked + * + * + * + .cmd :nth-child(3), input[name^="cmd"]:checked + * + * + .cmd :nth-child(4), input[name^="cmd"]:checked + * + .cmd :nth-child(5), input[name^="cmd"]:checked + .cmd :nth-child(6) {
  display: block !important;
  background: #cccccc; }

.cmd label {
  display: none; }
.cmd:not(:hover) label {
  background: transparent !important; }
.cmd:hover {
  z-index: 1;
  margin-bottom: -144px; }
  .cmd:hover label {
    display: block;
    background: #ffffff; }
    .cmd:hover label:hover {
      background: #eeeeee; }

.trigger .next {
  background: green; }
.trigger .prev {
  background: purple; }
.trigger [for^="i"] {
  background: yellow; }
.trigger .sb {
  background: orange; }

.global.trigger label {
  background: red; }

/**
 * Use to call logic mixins without needing to fit them in a condition
 */
/**
 * Will apply style rules to trigger if the symbol given to mixin is currently active
 * Must be called within another condition
 * ex: #mt1:checked { @include if-symbol-is-active(">"){ ... }
 */
/**
 * Functions to check if memory at current position is true or false
 */
/**
 * When selected command is $symbol:
 *  First, select the memory trigger radio button with the label with class of $action-class
 *  Second, when the memory trigger is focused on, show the label to preform the memory action
 *  Finally, while the memory trigger is checked, dont show the option to check it.
 */
.trigger {
  position: absolute;
  left: 40px;
  bottom: 40px; }
  .trigger label:not([for^="i"]) {
    display: none; }
  .trigger.right {
    left: auto;
    right: 40px; }
  .trigger label {
    display: block;
    float: left;
    width: 100px;
    background: #cccccc;
    position: relative; }
    .trigger label:not([for^="i"]) {
      height: 40px; }

.trigger label:hover {
  display: inline-block !important; }

.cmd + .trigger {
  z-index: 4; }

[name="p"] + .trigger {
  z-index: 3 !important; }

.global.trigger {
  z-index: 2; }

[name="p_v"]:focus ~ .cmd + .trigger,
[name="l"]:active ~ .cmd + .trigger {
  z-index: 4 !important; }

[name="l"]:not(:checked) + * + * + * + * + * + * + * + .trigger {
  display: none; }

[name="p"]:not(:checked) + .trigger {
  display: none; }

body {
  counter-reset: bracket-level 1; }

#eb:checked ~ .trigger .sb:hover ~ .next, #rb:checked ~ .trigger .sb:hover ~ .prev, #eb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + input[name^="cmd"]:checked + * + * + * + .cmd ~ .trigger [for="i1"]:hover ~ .next, #eb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + input[name^="cmd"]:checked + * + * + * + .cmd ~ .trigger .next:hover, #eb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + * + input[name^="cmd"]:checked + * + * + .cmd ~ .trigger [for="i1"]:hover ~ .next, #eb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + * + input[name^="cmd"]:checked + * + * + .cmd ~ .trigger .next:hover, #eb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + * + * + input[name^="cmd"]:checked + * + .cmd ~ .trigger [for="i1"]:hover ~ .next, #eb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + * + * + input[name^="cmd"]:checked + * + .cmd ~ .trigger .next:hover, #eb:checked ~ #i0:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger [for="i0"]:hover ~ .next,
#eb:checked ~ #i0:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger [for="i-1"]:hover ~ .next, #eb:checked ~ #i0:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger .next:hover, #eb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger [for="i0"]:hover ~ .next,
#eb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger [for="i-1"]:hover ~ .next, #eb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger .next:hover, #eb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + input[name^="cmd"]:checked + * + * + * + .cmd ~ .trigger [for="i2"]:hover ~ .next, #eb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + input[name^="cmd"]:checked + * + * + * + .cmd ~ .trigger .next:hover, #eb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + * + input[name^="cmd"]:checked + * + * + .cmd ~ .trigger [for="i2"]:hover ~ .next, #eb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + * + input[name^="cmd"]:checked + * + * + .cmd ~ .trigger .next:hover, #eb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + * + * + input[name^="cmd"]:checked + * + .cmd ~ .trigger [for="i2"]:hover ~ .next, #eb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + * + * + input[name^="cmd"]:checked + * + .cmd ~ .trigger .next:hover, #eb:checked ~ #i1:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger [for="i1"]:hover ~ .next,
#eb:checked ~ #i1:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger [for="i0"]:hover ~ .next, #eb:checked ~ #i1:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger .next:hover, #eb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger [for="i1"]:hover ~ .next,
#eb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger [for="i0"]:hover ~ .next, #eb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger .next:hover, #eb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + input[name^="cmd"]:checked + * + * + * + .cmd ~ .trigger [for="i3"]:hover ~ .next, #eb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + input[name^="cmd"]:checked + * + * + * + .cmd ~ .trigger .next:hover, #eb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + * + input[name^="cmd"]:checked + * + * + .cmd ~ .trigger [for="i3"]:hover ~ .next, #eb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + * + input[name^="cmd"]:checked + * + * + .cmd ~ .trigger .next:hover, #eb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + * + * + input[name^="cmd"]:checked + * + .cmd ~ .trigger [for="i3"]:hover ~ .next, #eb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + * + * + input[name^="cmd"]:checked + * + .cmd ~ .trigger .next:hover, #eb:checked ~ #i2:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger [for="i2"]:hover ~ .next,
#eb:checked ~ #i2:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger [for="i1"]:hover ~ .next, #eb:checked ~ #i2:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger .next:hover, #eb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger [for="i2"]:hover ~ .next,
#eb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger [for="i1"]:hover ~ .next, #eb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger .next:hover, #rb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + input[name^="cmd"]:checked + * + * + * + .cmd ~ .trigger [for="i1"]:hover ~ .prev, #rb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + input[name^="cmd"]:checked + * + * + * + .cmd ~ .trigger .prev:hover, #rb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + * + input[name^="cmd"]:checked + * + * + .cmd ~ .trigger [for="i1"]:hover ~ .prev, #rb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + * + input[name^="cmd"]:checked + * + * + .cmd ~ .trigger .prev:hover, #rb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + * + * + input[name^="cmd"]:checked + * + .cmd ~ .trigger [for="i1"]:hover ~ .prev, #rb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + * + * + input[name^="cmd"]:checked + * + .cmd ~ .trigger .prev:hover, #rb:checked ~ #i0:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger [for="i0"]:hover ~ .prev,
#rb:checked ~ #i0:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger [for="i-1"]:hover ~ .prev, #rb:checked ~ #i0:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger .prev:hover, #rb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger [for="i0"]:hover ~ .prev,
#rb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger [for="i-1"]:hover ~ .prev, #rb:checked ~ #i0:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger .prev:hover, #rb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + input[name^="cmd"]:checked + * + * + * + .cmd ~ .trigger [for="i2"]:hover ~ .prev, #rb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + input[name^="cmd"]:checked + * + * + * + .cmd ~ .trigger .prev:hover, #rb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + * + input[name^="cmd"]:checked + * + * + .cmd ~ .trigger [for="i2"]:hover ~ .prev, #rb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + * + input[name^="cmd"]:checked + * + * + .cmd ~ .trigger .prev:hover, #rb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + * + * + input[name^="cmd"]:checked + * + .cmd ~ .trigger [for="i2"]:hover ~ .prev, #rb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + * + * + input[name^="cmd"]:checked + * + .cmd ~ .trigger .prev:hover, #rb:checked ~ #i1:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger [for="i1"]:hover ~ .prev,
#rb:checked ~ #i1:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger [for="i0"]:hover ~ .prev, #rb:checked ~ #i1:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger .prev:hover, #rb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger [for="i1"]:hover ~ .prev,
#rb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger [for="i0"]:hover ~ .prev, #rb:checked ~ #i1:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger .prev:hover, #rb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + input[name^="cmd"]:checked + * + * + * + .cmd ~ .trigger [for="i3"]:hover ~ .prev, #rb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + input[name^="cmd"]:checked + * + * + * + .cmd ~ .trigger .prev:hover, #rb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + * + input[name^="cmd"]:checked + * + * + .cmd ~ .trigger [for="i3"]:hover ~ .prev, #rb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + * + input[name^="cmd"]:checked + * + * + .cmd ~ .trigger .prev:hover, #rb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + * + * + input[name^="cmd"]:checked + * + .cmd ~ .trigger [for="i3"]:hover ~ .prev, #rb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + * + * + input[name^="cmd"]:checked + * + .cmd ~ .trigger .prev:hover, #rb:checked ~ #i2:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger [for="i2"]:hover ~ .prev,
#rb:checked ~ #i2:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger [for="i1"]:hover ~ .prev, #rb:checked ~ #i2:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger .prev:hover, #rb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger [for="i2"]:hover ~ .prev,
#rb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger [for="i1"]:hover ~ .prev, #rb:checked ~ #i2:checked ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger .prev:hover, [name="p_v"]:not(:checked) + [name="p"]:checked ~ #eb:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger .next, [name="p_v"]:not(:checked) + [name="p"]:checked ~ #rb:checked ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger .prev, #mt1:not(:focus) ~ [name="l"]:checked + * + * + input[name^="cmd"]:checked + * + * + * + .cmd ~ .trigger .next:hover, #mt2:not(:focus) ~ [name="l"]:checked + * + * + * + input[name^="cmd"]:checked + * + * + .cmd ~ .trigger .next:hover, #mt3:not(:focus) ~ [name="l"]:checked + * + * + * + * + input[name^="cmd"]:checked + * + .cmd ~ .trigger .next:hover {
  display: block;
  width: 400px !important;
  margin-left: -300px !important;
  z-index: 4;
  background: black; }

[name="indent"][id$="0"]:checked ~ .trigger:not(.global) {
  margin-left: -100px; }

[for="i0"]::before {
  left: 0px;
  margin-right: 0px; }

[name="indent"][id$="1"]:checked ~ .trigger:not(.global) {
  margin-left: -200px; }

[for="i1"]::before {
  left: -100px;
  margin-right: -100px; }

[name="indent"][id$="2"]:checked ~ .trigger:not(.global) {
  margin-left: -300px; }

[for="i2"]::before {
  left: -200px;
  margin-right: -200px; }

[name="indent"][id$="3"]:checked ~ .trigger:not(.global) {
  margin-left: -400px; }

[for="i3"]::before {
  left: -300px;
  margin-right: -300px; }

.trigger [for^="i"], .trigger .sb {
  line-height: 40px;
  max-width: 100px;
  width: auto;
  overflow: hidden; }

.cmd + .trigger [for^="i"]::before,
.cmd + .trigger .sb::before {
  position: relative;
  font-size: 0;
  content: counter(bracket-level,lower-roman);
  letter-spacing: 100px;
  display: block;
  height: 40px; }

.sb {
  position: absolute !important;
  left: -100px !important;
  display: block !important;
  max-width: none !important; }

[id^="v"][id$="-1"]:checked {
  counter-increment: bracket-level 10; }

[id^="v"][id$="-5"]:checked {
  counter-increment: bracket-level -10; }

[name="indent"]:focus ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger .next, [name="indent"]:focus ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger .prev {
  display: none !important; }
[name="indent"]:focus ~ [name="l"]:checked + * + input[name^="cmd"]:checked + * + * + * + * + .cmd ~ .trigger .exit-block {
  display: block; }

#eb:focus ~ .trigger .exit-block {
  display: none !important; }

#rb:focus ~ .trigger .repeat-block {
  display: none !important; }

#first-element ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger .next {
  display: block; }
#first-element ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger [for^="i"] {
  left: 200px; }
#first-element ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger.global {
  z-index: 4; }

[name="p_v"]:checked + [name="p"]:checked ~ [name="indent"]:focus ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger .next, [name="p_v"]:checked + [name="p"]:checked ~ [name="indent"]:focus ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger .prev {
  display: none !important; }
[name="p_v"]:checked + [name="p"]:checked ~ [name="indent"]:focus ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger .repeat-block {
  display: block; }

[name="p_v"]:not(:checked) + [name="p"]:checked ~ [name="indent"]:focus ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger .next, [name="p_v"]:not(:checked) + [name="p"]:checked ~ [name="indent"]:focus ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger .prev {
  display: none !important; }
[name="p_v"]:not(:checked) + [name="p"]:checked ~ [name="indent"]:focus ~ [name="l"]:checked + * + * + * + * + * + input[name^="cmd"]:checked + .cmd ~ .trigger .exit-block {
  display: block; }

#eb:focus ~ .trigger .next {
  display: block !important; }

#rb:focus ~ .trigger .prev {
  display: block !important; }

[contenteditable]:not([name="l"]):not([name="indent"]):not(#mt0):focus ~ .trigger {
  z-index: 1; }
  [contenteditable]:not([name="l"]):not([name="indent"]):not(#mt0):focus ~ .trigger .next {
    display: block; }

#mt0:focus ~ .trigger.global {
  display: none; }

#mt1:not(:focus) ~ [name="l"]:checked + * + * + input[name^="cmd"]:checked + * + * + * + .cmd ~ .trigger .memory-prev {
  display: inline-block; }

#mt1:focus ~ .trigger .prev-p {
  display: inline-block; }

#mt1:checked ~ .trigger .memory-prev {
  display: none !important; }

#mt2:not(:focus) ~ [name="l"]:checked + * + * + * + input[name^="cmd"]:checked + * + * + .cmd ~ .trigger .toggle {
  display: inline-block; }

#mt2:focus ~ .trigger .flip {
  display: inline-block; }

#mt2:checked ~ .trigger .toggle {
  display: none !important; }

#mt3:not(:focus) ~ [name="l"]:checked + * + * + * + * + input[name^="cmd"]:checked + * + .cmd ~ .trigger .memory-next {
  display: inline-block; }

#mt3:focus ~ .trigger .next-p {
  display: inline-block; }

#mt3:checked ~ .trigger .memory-next {
  display: none !important; }

[name="l"]:focus ~ .trigger .memory-noop {
  display: inline-block !important; }

[name="p_v"]:focus ~ .trigger .toggle, [name="p"]:focus ~ .trigger .toggle {
  display: none !important; }

[name="l"]:focus ~ .trigger .memory-noop {
  display: inline-block; }

*:not([contenteditable]) {
  user-select: none;
  -moz-user-select: none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  -o-user-select: none; }

/*# sourceMappingURL=main.css.map */
