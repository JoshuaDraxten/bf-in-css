/**
 * Will apply style rules to trigger if the symbol given to mixin is currently active
 * Must be called within another condition
 * ex: #mt1:checked { @include if-symbol-is-active(">"){ ... }
 */
@mixin if-symbol-is-active( $symbol ) {
  & ~ [name="l"]:checked {
    @if ($symbol == "[") { &+*+ input[name^="cmd"]:checked +*+*+*+*+ .cmd ~ .trigger { @content; }}
    @if ($symbol == "<") { &+*+*+ input[name^="cmd"]:checked +*+*+*+ .cmd ~ .trigger { @content; }}
    @if ($symbol == "+") { &+*+*+*+ input[name^="cmd"]:checked +*+*+ .cmd ~ .trigger { @content; }}
    @if ($symbol == ">") { &+*+*+*+*+ input[name^="cmd"]:checked +*+ .cmd ~ .trigger { @content; }}
    @if ($symbol == "]") { &+*+*+*+*+*+ input[name^="cmd"]:checked + .cmd ~ .trigger { @content; }}
  }
}

/**
 * When selected command is $symbol:
 *  First, select the memory trigger radio button with the label with class of $action-class
 *  Second, when the memory trigger is focused on, show the label to preform the memory action
 *  Finally, while the memory trigger is checked, dont show the option to check it.
 */
@mixin memory-trigger( $symbol, $memory-trigger-id, $action-class, $command-class ) {
  #{$memory-trigger-id}:not(:focus) {
    @include if-symbol-is-active($symbol) {
      #{$command-class} {display: inline-block;}
    }
  }
  #{$memory-trigger-id}:focus ~ .trigger #{$action-class} {display: inline-block;}
  #{$memory-trigger-id}:checked ~ .trigger #{$command-class} { display: none !important; }
}
